/**
 * Companies House identity service
 * Companies House identity and authentication service.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.wso2.client.model.CompaniesHouseIdentityService;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AccessToken {
  
  @SerializedName("access_token")
  private String accessToken = null;
  @SerializedName("expires_in")
  private Integer expiresIn = null;
  public enum TokenTypeEnum {
     Bearer, 
  };
  @SerializedName("token_type")
  private TokenTypeEnum tokenType = null;
  @SerializedName("refresh_token")
  private String refreshToken = null;

  /**
   * The token that can be sent to a Companies House API.
   **/
  @ApiModelProperty(required = true, value = "The token that can be sent to a Companies House API.")
  public String getAccessToken() {
    return accessToken;
  }
  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  /**
   * Time in seconds until token expires.
   **/
  @ApiModelProperty(required = true, value = "Time in seconds until token expires.")
  public Integer getExpiresIn() {
    return expiresIn;
  }
  public void setExpiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
  }

  /**
   * The type of token.
   **/
  @ApiModelProperty(required = true, value = "The type of token.")
  public TokenTypeEnum getTokenType() {
    return tokenType;
  }
  public void setTokenType(TokenTypeEnum tokenType) {
    this.tokenType = tokenType;
  }

  /**
   * The token to be used to refresh the access token. Only returned if the `grant_type` is `authorization_code`.
   **/
  @ApiModelProperty(value = "The token to be used to refresh the access token. Only returned if the `grant_type` is `authorization_code`.")
  public String getRefreshToken() {
    return refreshToken;
  }
  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessToken accessToken = (AccessToken) o;
    return (this.accessToken == null ? accessToken.accessToken == null : this.accessToken.equals(accessToken.accessToken)) &&
        (this.expiresIn == null ? accessToken.expiresIn == null : this.expiresIn.equals(accessToken.expiresIn)) &&
        (this.tokenType == null ? accessToken.tokenType == null : this.tokenType.equals(accessToken.tokenType)) &&
        (this.refreshToken == null ? accessToken.refreshToken == null : this.refreshToken.equals(accessToken.refreshToken));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accessToken == null ? 0: this.accessToken.hashCode());
    result = 31 * result + (this.expiresIn == null ? 0: this.expiresIn.hashCode());
    result = 31 * result + (this.tokenType == null ? 0: this.tokenType.hashCode());
    result = 31 * result + (this.refreshToken == null ? 0: this.refreshToken.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessToken {\n");
    
    sb.append("  accessToken: ").append(accessToken).append("\n");
    sb.append("  expiresIn: ").append(expiresIn).append("\n");
    sb.append("  tokenType: ").append(tokenType).append("\n");
    sb.append("  refreshToken: ").append(refreshToken).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
